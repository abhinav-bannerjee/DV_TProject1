{
    "contents" : "require(tidyr)\nrequire(dplyr)\nrequire(ggplot2)\n\nsetwd(\"/Users/CK/DV_TProject1/01 Data\")\nfile_path <- \"2016 FE Guide for DOE.csv\"\n\ndf <- read.csv(file_path, stringsAsFactors = FALSE)\n\n# Replace \".\" (i.e., period) with \"_\" in the column names.\nnames(df) <- gsub(\"\\\\.+\", \"_\", names(df))\nnames(df)[7]<- \"Numbers_of_Cyl\"\nnames(df)[9]<- \"City_FE_Guide\"\nnames(df)[10]<- \"Hwy_FE_Guide\"\nnames(df)[11]<- \"Comb_FE_Guide\"\nnames(df)[15]<- \"Numbers_of_Gear\"\nnames(df)[20] <-\"Fuel_Usage_Desc\"\nnames(df)[21]<- \"Annual_Fuel_Cost\"\nnames(df)[22]<- \"Calculated_Annual_Fuel_Cost\"\nnames(df)[29] <-\"Numbers_of_Batteries\"\nnames(df)[31] <-\"Total_Voltage_for_Battery\"\nnames(df)[32] <-\"Batt_Energy_Cpacity_Amp_hrs\"\nnames(df)[33] <-\"Batt_Specific_Energy_Watt\"\nnames(df)[36] <- \"Regen_Braking_Wheels_Source\"\nnames(df)[38] <-\"Numbers_of_Drive_Motor_Gen\"\nnames(df)[40] <-\"Rated_Motor_Gen_Power_kW\"\nnames(df)[42] <-\"Fuel_Cell_Vehicle\"\nnames(df)[43] <- \"Off_Board_Charge_Capable\"\nnames(df)[44] <-\"Camless_Valvetrain\"\nnames(df)[46] <-\"Stop_Start_Engine\"\nnames(df)[47] <- \"Calculated_Gas_Guzzler_MPG\"\nnames(df)[48] <-\"FE_Rating_1_10\"\nnames(df)[49] <-\"five_years_savings\"\nnames(df)[50] <-\"five_years_spend\"\nnames(df)[53] <-\"Comb_CO2_Rounded_Adjusted\"\ndf <-select(df,1:53)\n#str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.\n\nmeasures <- c(\"Model_Year\",\"Eng_Displ\",\"Numbers_of_Cyl\",\"City_FE_Guide\",\"Hwy_FE_Guide\",\"Comb_FE_Guide\",\"Numbers_of_Gear\",\"Max_Ethanol_Gasoline\",\"Annual_Fuel_Cost\",\"Calculated_Annual_Fuel_Cost\",\"EPA_FE_Label_Dataset_ID\",\"Numbers_of_Batteries\",\"Total_Voltage_for_Battery\",\"Batt_Energy_Cpacity_Amp_hrs\",\"Batt_Specific_Energy_Watt\",\"Numbers_of_Drive_Motor_Gen\",\"Rated_Motor_Gen_Power_kW\",\"Calculated_Gas_Guzzler_MPG\",\"FE_Rating_1_10\",\"five_years_savings\",\"five_years_spend\",\"City_CO2_Rounded_Adjusted\",\"Hwy_CO2_Rounded_Adjusted\",\"Comb_CO2_Rounded_Adjusted\")\n#measures <- NA # Do this if there are no measures.\n\n# Get rid of special characters in each column.\n# Google ASCII Table to understand the following:\nfor(n in names(df)) {\n  df[n] <- data.frame(lapply(df[n], gsub, pattern=\"[^ -~]\",replacement= \"\"))\n}\n\ndimensions <- setdiff(names(df), measures)\nif( length(measures) > 1 || ! is.na(dimensions)) {\n  for(d in dimensions) {\n    # Get rid of \" and ' in dimensions.\n    df[d] <- data.frame(lapply(df[d], gsub, pattern=\"[\\\"']\",replacement= \"\"))\n    # Change & to and in dimensions.\n    df[d] <- data.frame(lapply(df[d], gsub, pattern=\"&\",replacement= \" and \"))\n    # Change : to ; in dimensions.\n    df[d] <- data.frame(lapply(df[d], gsub, pattern=\":\",replacement= \";\"))\n  }\n}\n\nlibrary(lubridate)\n\n# The following is an example of dealing with special cases like making state abbreviations be all upper case.\n# df[\"State\"] <- data.frame(lapply(df[\"State\"], toupper))\n\n# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions\nif( length(measures) > 1 || ! is.na(measures)) {\n  for(m in measures) {\n    df[m] <- data.frame(lapply(df[m], gsub, pattern=\"[^--.0-9]\",replacement= \"\"))\n  }\n}\n\nwrite.csv(df, paste(gsub(\".csv\", \"\", file_path), \".reformatted.csv\", sep=\"\"), row.names=FALSE, na = \"\")\n\ntableName <- gsub(\" +\", \"_\", gsub(\"[^A-z, 0-9, ]\", \"\", gsub(\".csv\", \"\", file_path)))\nsql <- paste(\"CREATE TABLE\", tableName, \"(\\n-- Change table_name to the table name you want.\\n\")\nif( length(measures) > 1 || ! is.na(dimensions)) {\n  for(d in dimensions) {\n    sql <- paste(sql, paste(d, \"varchar2(4000),\\n\"))\n  }\n}\nif( length(measures) > 1 || ! is.na(measures)) {\n  for(m in measures) {\n    if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, \"number(38,4),\\n\"))\n    else sql <- paste(sql, paste(m, \"number(38,4)\\n\"))\n  }\n}\nsql <- paste(sql, \");\")\ncat(sql)\n",
    "created" : 1446519786630.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1921797795",
    "id" : "322D1EAC",
    "lastKnownWriteTime" : 1446519988,
    "path" : "~/DV_TProject1/01 Data/1.R",
    "project_path" : "01 Data/1.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}