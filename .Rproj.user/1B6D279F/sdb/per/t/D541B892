{
    "contents" : "---\ntitle: \"DV_RProject2\"\noutput: html_document\n---\n\nName: Ke Chen, Abhinav Bannerjee\n\nUT EID: kc35827, ab45393\n\n```{r,message=FALSE,echo=FALSE}\nsource(\"../.Rprofile\",echo=FALSE)\n```\n###General Steps\n1. Find the .csv data \"Online Credit Card Fraud by Postcode, United Kingdom, 2009\" online.\n2. create the repository in Github.\n3 create project with four directories.\n4.Using R_etl.r to reformat our data and import data into ORACL SQL.\n5. Query data from server, and create dataframe.\n6. wrangle data, and generate a plot for each.\n7. make explanation on each plot.\n8. Knit R, combine all file into a html file.\n\n\n\n\n###R_ETL.R file operation\nThe R_ETL file generates a code for us to create a table in Oracle SQL.\n```{r,message=FALSE,echo=FALSE}\nsource(\"../01 Data/R_Etl.R\",print.eval=TRUE)\n```\n```{r,echo=FALSE,message=FALSE}\nsource(\"../01 Data/Dataframe.R\", echo=FALSE)\n```\n\n\n###Subset\nFirst Six row of data and ordered by Postcode\n```{r,echo=FALSE}\n#display subset\nhead(arrange(df,POSTCODE))\n```\n\n###Summary\nDisplay the summary of Online Credit Card Fraud\n```{r,echo=FALSE}\n#display summary of data\nsummary(df)\n```\n\n###Plots\n\n\n####Case 1:\n```{r,message=FALSE,echo=FALSE}\nsource(\"../02 Data Wrangling/1.R\", print.eval=TRUE)\n```\n```{r,message= FALSE,echo=FALSE,warning=FALSE}\nsource(\"../03 Visualizations/1.R\",print.eval=TRUE)\n```\n  \n      We select the Latitude, Frauds, and Fraud Value from the data frame as our data frame for the first plot. The plot uses latitude as the x-axis, and numbers of frauds as y-axis to see which latitude occurred more frauds. Also, we use fraud_value as the color to see which latitude has the high fraud value. From the graph, we can see that the cities between 51 N to 52.5 N have more frauds than the other place. This region includes cities, such as London, Oxford, Birmingham, Northampton. It makes sense that those cities around London and London is the financial center. Between this area, They also have the higher fraud value than another area.  In the far north, both the number of fraud and fraud value keep at a low level. The graph is skewed to left. We can conclude that cities in the South have the higher chance than North to occur fraud.\n\n\n\n####Case 2:\n```{r,message=FALSE,echo=FALSE}\nsource(\"../02 Data Wrangling/2.R\", print.eval=TRUE)\n```\n```{r,message= FALSE,echo=FALSE,warning=FALSE}\nsource(\"../03 Visualizations/2.R\",print.eval=TRUE)\n```\n  \n     For the seccond plot, we select Longitude, Frauds and Fraud value from the dataframe.we put  longitude as x-axis, and numbers of frauds as y-axis to see which longitude occurred more frauds.Also, we use fraud_value as the color to see which longitude has the high fraud value.on From the graph, we can see that most fraud happened around 0.0 E(between 1.E and 1 W), where London is in this area. That's also makes sense, since London is a huge city and the financial center. It has more chance to meet fraud in London and surrounding area. And all high value frauds are between(or near) this area. And all high value of fraud are in this area. The graph is skewed to right. We can conclude that the cities in the East have the higher chance than West to occur fraud.\n\n\n\n####Case 3:\n```{r,message=FALSE,echo=FALSE}\nsource(\"../02 Data Wrangling/3.R\", print.eval=TRUE)\n```\n```{r,message= FALSE,echo=FALSE,warning=FALSE}\nsource(\"../03 Visualizations/3.R\",print.eval=TRUE)\n```\n  \n     But does a high number of fraud means high fraud ratio? Therefore, we group the dataframe and select both longitude and latitude in the new table with fraud value and bad ratio. And we create these two graphs with Latitude and Longitude as x-axisï¼ˆrespect) and Fraud Ratio on the y-axis to see how are they differ from the other two case above.  Compare them, and we can find out that the basic shape of the plot are similar, but not exactly.  Some cities in the North or West also have high fraud ratio than the cities around London (between 51Nand 52.5N, and between 1 W and 1E ). If we rank it, these cities can rank as 8th and 9th position in the whole UK. So, this means that, cities with a high number of frauds may have low fraud ratio, they have a high number of frauds just because they have huge transactions.  That is one different. The other different when we compare with above cases is that cities with low fraud_ratio can also have the high fraud value. As, we can see, there is a city has only about 0.1 fraud ratio but has the most amount of fraud value.  But both of them follow the same shape when compare with the plot in above two cases respectively. \n\n \n \n \n####Case 4:\n```{r,message=FALSE,echo=FALSE}\nsource(\"../02 Data Wrangling/4.R\", print.eval=TRUE)\n```\n```{r,message= FALSE,echo=FALSE,warning=FALSE}\nsource(\"../03 Visualizations/4.R\",print.eval=TRUE)\n```\n  \n     In this case, we use group by function to grouped cities who have same bad ratio together and summarize them to see how many cities are with the different level of the bad ratio.  We generate a histogram to see the results. The graph of histogram skews to the right. And most of the cities has the fraud ratio less than 0.1, and there exists a gap between 0.0 and 0.1. And the graph also shows us outlier that has a bad ratio greater than 0.11. There are some cities with extremely high fraud ratio, which are greater than 0.24. That's mean for every 100 transactions; there will be 25 frauds. That's a really high potential. Fortunately, most of the cities in the data has a low-level fraud ratio, which is less than 0.05. And in these cities most of the are less than 0.001, which means 1000 transactions will only have one fraud. That's good, and it meet our expectation.\n",
    "created" : 1446519678595.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3519301576",
    "id" : "D541B892",
    "lastKnownWriteTime" : 1446519934,
    "path" : "~/DataVisualization/DV_RProject2/00 Doc/DV_RProject2.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}